// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package bootstrap

import (
	"gin-web/api/v1"
	"gin-web/initialize"
	"gin-web/middleware"
	"gin-web/pkg/email"
	"gin-web/pkg/jwt"
	"gin-web/pkg/utils"
	"gin-web/repository"
	"gin-web/repository/cache"
	"gin-web/repository/dao"
	"gin-web/router"
	"gin-web/service"
)

// Injectors from wire.go:

func wireApp() *App {
	viper := initialize.NewViper()
	writeSyncer := initialize.NewWriterSyncer(viper)
	sugaredLogger := initialize.NewZapLogger(viper, writeSyncer)
	dialer := initialize.NewDialer(viper)
	emailClient := email.NewEmailClient(sugaredLogger, dialer, viper)
	engine := initialize.NewEngine(writeSyncer, emailClient, sugaredLogger, viper)
	httpServer := initialize.NewServer(viper, engine, sugaredLogger)
	routerGroup := router.NewRouter(engine, viper)
	db := initialize.NewGORM(viper)
	commonRedisClient := initialize.NewRedisClient(writeSyncer, viper)
	redisLocksmith := utils.NewRedisLocksmith(sugaredLogger, commonRedisClient)
	basicService := service.NewBasicService(sugaredLogger, db, redisLocksmith, viper)
	basicDAO := dao.NewBasicDao(db)
	attachmentDAO := dao.NewAttachmentDAO(basicDAO)
	attachmentRepository := repository.NewAttachmentRepository(attachmentDAO)
	attachmentService := service.NewAttachmentService(basicService, attachmentRepository)
	userDAO := dao.NewUserDAO(basicDAO)
	userCache := cache.NewUserCache(commonRedisClient)
	userRepository := repository.NewUserRepository(userDAO, userCache)
	tokenBuilder := jwt.NewJwtBuilder(db, commonRedisClient, viper, userRepository)
	authMiddleware := middleware.NewAuthMiddleware(viper, userRepository, tokenBuilder)
	attachmentApi := v1.NewAttachmentApi(routerGroup, attachmentService, authMiddleware, viper)
	captchaService := service.NewCaptchaService()
	captchaApi := v1.NewCaptchaApi(routerGroup, captchaService)
	app := &App{
		logger:        sugaredLogger,
		viper:         viper,
		httpServer:    httpServer,
		attachmentApi: attachmentApi,
		captchaApi:    captchaApi,
	}
	return app
}
